<?php
# This file was automatically generated by the MediaWiki 1.40.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "BibleVerseWiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://bibleverse.wiki";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	##'1x' => "$wgResourceBasePath/resources/assets/holy-bible-svgrepo-com.svg",
	'svg' => "$wgResourceBasePath/resources/assets/holy-bible-svgrepo-com.svg",
	'icon' => "$wgResourceBasePath/resources/assets/holy-bible-svgrepo-com.svg"
];

 $wgFavicon = "$wgResourceBasePath/resources/assets/favicon.ico";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "bible_wiki";
$wgDBuser = "Zelrain";
$wgDBpassword = "jkawDHoJM5wzMb";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = false;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "54a2a92cc60e17a004b2edc85b23d9ad868ff657801af5f3bf2eeeddd5359e69";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "65f8a37ba828dc5d";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = 'vector-2022';
$wgSkipSkins = ['vector'];

# Enabled skins.
# The following skins were automatically enabled:
// wfLoadSkin( 'MinervaNeue' );
// wfLoadSkin( 'MonoBook' );
// wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'AbuseFilter' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'TitleBlacklist' );

wfLoadExtension( 'WikiEditor' );
wfLoadExtension( 'TemplateWizard' );
wfLoadExtension( 'TemplateData' );

wfLoadExtension( 'CodeMirror' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'CodeEditor' );

wfLoadExtension( 'Elastica' );
wfLoadExtension( 'CirrusSearch' );

wfLoadExtension( 'UrlGetParameters' );

wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'Linter' );
wfLoadExtension( 'Echo' );
wfLoadExtension( 'DiscussionTools' );

# End of automatically generated settings.
# Add more configuration options below.


$wgWikiEditorRealtimePreview = true;
$wgRateLimits['edit']['user'] = [ 40000, 60 ];

$wgSearchType = 'CirrusSearch';
//$wgDisableInternalSearch = true;
//$wgDisableSearchUpdate = true;
//$wgDisableTextSearch = true;
// $wgDisableCounters = true;
// $wgMiserMode = true;
//$wgCirrusSearchUseCompletionSuggester = 'yes';
// $wgCirrusSearchCompletionSuggesterSubphrases = [
//     'build' => true,
//     'use' => true,
//     'type' => 'anywords',
//     'limit' => 10,
// ];

$wgDefaultUserOptions['usecodemirror'] = true;
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['visualeditor-autodisable'] = true;
//$wgDefaultUserOptions["cirrussearch-pref-completion-profile"] = "fuzzy";
// $wgHiddenPrefs[] = 'cirrussearch-pref-completion-profile';


define("NS_VERSE_TEMPLATE", 3000); // This MUST be even.
define("NS_VERSE_TEMPLATE_TALK", 3001); // This MUST be the following odd integer.
$wgExtraNamespaces[NS_VERSE_TEMPLATE] = "VerseTemplate";
$wgExtraNamespaces[NS_VERSE_TEMPLATE_TALK] = "VerseTemplate_talk"; // Note underscores in the namespace name.
$wgNamespaceProtection[NS_MAIN] = ['edit-main'];
$wgNamespaceProtection[NS_VERSE_TEMPLATE] = ['edit-main'];
$wgGroupPermissions['sysop']['edit-main'] = true;
$wgGroupPermissions['bot']['edit-main'] = true;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['user']['move'] = false;
// $wgGroupPermissions['sysop']['edit'] = true;
// $wgGroupPermissions['bot']['edit'] = true;

unset( $wgFooterIcons['poweredby'] );

$wgAPIMaxResultSize = 6144000;
$wgMaxArticleSize = 6000;

// Add a link to this page (https://www.mediawiki.org/wiki/?curid=6031)
// test-desc is an i18n message of the text
$wgHooks['SkinAddFooterLinks'][] = function ( Skin $skin, string $key, array &$footerlinks ) {
    if ( $key === 'places' ) {
        $footerlinks['test'] = Html::element( 'a',
            [
                'href' => 'https://www.paypal.com/donate/?business=9HLFGR4SHR6C4&no_recurring=0&item_name=Thank+you+for+supporting+me+and+BibleVerseWiki.&currency_code=USD',
                'rel' => 'noreferrer noopener' // not required, but recommended for security reasons
            ],
        $skin->msg( 'Donate' )->text()
        );
    };
};